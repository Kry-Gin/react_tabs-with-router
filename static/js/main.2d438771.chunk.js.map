{"version":3,"sources":["pages/PageNavLink/PageNavLink.tsx","components/Navbar/Navbar.tsx","components/TabLink/TabLink.tsx","pages/PageTabs/PageTabs.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","title","className","isActive","classNames","Navbar","TabLink","tab","onSetTabContent","id","content","tabId","useParams","useEffect","tabs","PageTabes","useState","tabContent","setTabContent","map","App","index","element","path","replace","ReactDOM","render","document","getElementById"],"mappings":"uPAQaA,EAA+B,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OAC1C,cAAC,IAAD,CACEC,UAAW,gBAAGC,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,cACA,CAAE,YAAaD,KAEjBH,GAAIA,EALN,SAOGC,KCbQI,EAAmB,kBAC9B,qBACEH,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAaF,GAAG,IAAIC,MAAM,SAC1B,cAAC,EAAD,CAAaD,GAAG,OAAOC,MAAM,iB,OCFxBK,EAA2B,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,IAAKC,EAAsB,EAAtBA,gBACtCC,EAAuBF,EAAvBE,GAAIR,EAAmBM,EAAnBN,MAAOS,EAAYH,EAAZG,QACXC,EAAUC,cAAVD,MAQR,OANAE,qBAAU,WACJF,IAAUF,GACZD,EAAgBE,KAEjB,CAACC,IAGF,oBACE,UAAQ,MACRT,UAAWS,IAAUF,EAAK,YAAc,GAF1C,SAIE,cAAC,IAAD,CAAMT,GAAE,gBAAWS,GAAnB,SACGR,OCpBHa,EAAc,CAClB,CAAEL,GAAI,QAASR,MAAO,QAASS,QAAS,eACxC,CAAED,GAAI,QAASR,MAAO,QAASS,QAAS,eACxC,CAAED,GAAI,QAASR,MAAO,QAASS,QAAS,gBAG7BK,EAAsB,WACjC,MAAoCC,mBAAS,uBAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACQP,EAAUC,cAAVD,MAQR,OANAE,qBAAU,WACHF,GACHO,EAAc,yBAEf,CAACP,IAGF,qCACE,oBAAIT,UAAU,QAAd,uBAEA,qBAAKA,UAAU,gBAAf,SACE,6BACGY,EAAKK,KAAI,SAAAZ,GAAG,OACX,cAAC,EAAD,CACEA,IAAKA,EACLC,gBAAiBU,GACZX,EAAIE,WAMjB,qBAAKP,UAAU,QAAQ,UAAQ,aAA/B,SACGe,QC9BIG,EAAgB,kBAC3B,qCAEE,cAAC,EAAD,IAEA,qBAAKlB,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEmB,OAAK,EACLC,QACE,oBAAIpB,UAAU,QAAd,yBAIJ,cAAC,IAAD,CAAOqB,KAAK,OAAOD,QAAS,cAAC,IAAD,CAAUtB,GAAG,IAAIwB,SAAO,MAEpD,eAAC,IAAD,CAAOD,KAAK,OAAZ,UACE,cAAC,IAAD,CAAOF,OAAK,EAACC,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOC,KAAK,SAASD,QAAS,cAAC,EAAD,SAGhC,cAAC,IAAD,CACEC,KAAK,IACLD,QACE,oBAAIpB,UAAU,QAAd,yCC7BduB,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2d438771.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ninterface Props {\n  to: string,\n  title: string,\n}\n\nexport const PageNavLink: React.FC<Props> = ({ to, title }) => (\n  <NavLink\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      { 'is-active': isActive },\n    )}\n    to={to}\n  >\n    {title}\n  </NavLink>\n);\n","import React from 'react';\nimport { PageNavLink } from '../../pages/PageNavLink';\n\nexport const Navbar: React.FC = () => (\n  <nav\n    className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n    data-cy=\"Nav\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" title=\"Home\" />\n        <PageNavLink to=\"tabs\" title=\"Tabs\" />\n      </div>\n    </div>\n  </nav>\n);\n","import { useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { Tab } from '../../types/Tab';\n\ninterface Props {\n  tab: Tab,\n  onSetTabContent: React.Dispatch<React.SetStateAction<string>>,\n}\n\nexport const TabLink: React.FC<Props> = ({ tab, onSetTabContent }) => {\n  const { id, title, content } = tab;\n  const { tabId } = useParams();\n\n  useEffect(() => {\n    if (tabId === id) {\n      onSetTabContent(content);\n    }\n  }, [tabId]);\n\n  return (\n    <li\n      data-cy=\"Tab\"\n      className={tabId === id ? 'is-active' : ''}\n    >\n      <Link to={`/tabs/${id}`}>\n        {title}\n      </Link>\n    </li>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { TabLink } from '../../components/TabLink';\nimport { Tab } from '../../types/Tab';\n\nconst tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const PageTabes: React.FC = () => {\n  const [tabContent, setTabContent] = useState('Please select a tab');\n  const { tabId } = useParams();\n\n  useEffect(() => {\n    if (!tabId) {\n      setTabContent('Please select a tab');\n    }\n  }, [tabId]);\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <TabLink\n              tab={tab}\n              onSetTabContent={setTabContent}\n              key={tab.id}\n            />\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {tabContent}\n      </div>\n    </>\n  );\n};\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport React from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\nimport { PageTabes } from './pages/PageTabs';\n\nexport const App: React.FC = () => (\n  <>\n    {/* Also requires <html class=\"has-navbar-fixed-top\"> */}\n    <Navbar />\n\n    <div className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route\n            index\n            element={(\n              <h1 className=\"title\">Home page</h1>\n            )}\n          />\n\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"tabs\">\n            <Route index element={<PageTabes />} />\n            <Route path=\":tabId\" element={<PageTabes />} />\n          </Route>\n\n          <Route\n            path=\"*\"\n            element={(\n              <h1 className=\"title\">Page not found</h1>\n            )}\n          />\n        </Routes>\n      </div>\n    </div>\n  </>\n);\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}